{"version":3,"file":"static/js/983.2dc79a13.chunk.js","mappings":"sNAEaA,EAAOC,EAAAA,GAAAA,GAAH,0DAIJC,EAAOD,EAAAA,GAAAA,GAAH,+F,SCkBjB,EApBgB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,SAACJ,EAAD,UACGG,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACV,SAACT,EAAD,WACE,SAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMV,GAA1C,SACGM,GAAQC,KAFFF,EADD,KASjB,C,yHCuBD,UApCA,WACE,OAAkCM,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAeiB,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEJ,GAAa,GACbE,EAAS,MAFX,mBAI8BG,EAAAA,EAAAA,MAJ9B,gBAIYC,EAJZ,EAIYA,QACRH,EAAUG,GALd,kDAOuB,iBAAf,KAAMC,MACRL,EAAS,kBARf,yBAWIF,GAAa,GAXjB,8EADc,uBAAC,WAAD,wBAedQ,EACD,GAAE,KAGD,4BACE,wBAAI,mBACHT,GACC,SAAC,IAAD,UAAS,aAET,SAAC,IAAD,CAASb,OAAQA,IAElBe,IAAS,SAAC,IAAD,UAAUA,MAGzB,C,yLCrCKQ,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAR,EAAW,mCAAG,oGACFI,EAASK,IAAT,uBADE,cACnBC,EADmB,OAEzB1B,QAAQC,IAAIyB,EAASC,MAFI,kBAGlBD,EAASC,MAHS,2CAAH,qDAMXC,EAAU,mCAAG,WAAMzB,GAAN,uFACDiB,EAASK,IAAT,iBAAuBtB,IADtB,cAClBuB,EADkB,OAExB1B,QAAQC,IAAIyB,EAASC,MAFG,kBAGjBD,EAASC,MAHQ,2CAAH,sDAMVE,EAAc,mCAAG,gGAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,UAAjB,SACLX,EAASK,IAAT,8BAAoCK,GAAU,CACnEE,OAAQD,EAAUC,SAFQ,cACtBN,EADsB,OAI5B1B,QAAQC,IAAIyB,EAASC,MAJO,kBAKrBD,EAASC,MALY,2CAAH,sDAQdM,EAAY,mCAAG,WAAM9B,GAAN,uFACHiB,EAASK,IAAT,iBAAuBtB,EAAvB,aADG,cACpBuB,EADoB,OAE1B1B,QAAQC,IAAIyB,EAASC,MAFK,kBAGnBD,EAASC,MAHU,2CAAH,sDAMZO,EAAW,mCAAG,WAAM/B,GAAN,uFACFiB,EAASK,IAAT,iBAAuBtB,EAAvB,aADE,cACnBuB,EADmB,OAEzB1B,QAAQC,IAAIyB,EAASC,MAFI,kBAGlBD,EAASC,MAHS,2CAAH,qD","sources":["components/Actions/Actions.styled.js","components/Actions/Actions.jsx","pages/HomePage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 5;\n  padding: 0 12px;\n`;\nexport const Item = styled.li`\n  margin-bottom: 5px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item } from './Actions.styled';\n\nconst Actions = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <List>\n      {movies.map(({ id, name, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {name || title}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nActions.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nexport default Actions;","import { useEffect, useState } from 'react';\nimport { getAllMovie } from '../services/movies-api';\nimport Message from 'components/Message/Message';\nimport Actions from 'components/Actions/Actions';\n\nfunction HomePage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  \n  useEffect(() => {\n    async function loadMovies() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const { results } = await getAllMovie();\n        setMovies(results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Try reloading!');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Popular videos</h1>\n      {isLoading ? (\n        <Message>Loading</Message>\n      ) : (\n        <Actions movies={movies} />\n      )}\n      {error && <Message>{error}</Message>}\n    </div>\n  );\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7b381c0941b126eabbbca88209330c37',\n  },\n});\n\nexport const getAllMovie = async () => {\n  const response = await instance.get(`trending/movie/day?`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getDetails = async id => {\n  const response = await instance.get(`/movie/${id}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getSearchMovie = async ({ search, abortCtrl }) => {\n  const response = await instance.get(`/search/movie?query=${search}`, {\n    signal: abortCtrl.signal,\n  });\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await instance.get(`/movie/${id}/credits`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getRevMovie = async id => {\n  const response = await instance.get(`/movie/${id}/reviews`);\n  console.log(response.data);\n  return response.data;\n};  "],"names":["List","styled","Item","movies","location","useLocation","console","log","map","id","name","title","to","state","from","useState","isLoading","setIsLoading","error","setError","setMovies","useEffect","getAllMovie","results","code","loadMovies","instance","axios","baseURL","params","api_key","get","response","data","getDetails","getSearchMovie","search","abortCtrl","signal","getMovieCast","getRevMovie"],"sourceRoot":""}