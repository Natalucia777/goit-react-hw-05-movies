{"version":3,"file":"static/js/741.daa6ca41.chunk.js","mappings":"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","sources":["components/AboutTheFilm/AboutTheFilm.styled.js","components/AboutTheFilm/AboutTheFilm.jsx","components/Informations/Informations.styled.js","components/Informations/Informations.jsx","pages/MovieDetailsPage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  border-bottom: 1px solid gray;\n`;\n","import { Suspense } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { Section } from './AboutTheFilm.styled';\n\nconst AboutTheFilm = () => {\n  return (\n    <>\n      <Section>\n        <p>About the film</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </Section>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default AboutTheFilm;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid gray;\n`;\n","import imgMovie from 'components/img-movie/img-movie.png';\nimport PropTypes from 'prop-types';\nimport { Wrapper } from './Informations.styled';\n\nconst Informations = ({ movie }) => {\n  return (\n    <Wrapper>\n      <img\n        src={ movie.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : imgMovie }\n        alt={movie.original_title}\n        width=\"200\"\n      />\n      <ul>\n        <li>\n          <h1>\n            {movie.original_title} ({movie.releaseYear})\n          </h1>\n          <p>User Score: {movie.votePercentage}%</p>\n        </li>\n        <li>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n        </li>\n        <li>\n          <h2>Genres</h2>\n          <p>{movie.genres}</p>\n        </li>\n      </ul>\n    </Wrapper>\n  );\n};\n\nInformations.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    releaseYear: PropTypes.string,\n    votePercentage: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Informations;","import { useEffect, useState, useRef } from 'react';\nimport { TiArrowLeftThick } from \"react-icons/ti\";\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from '../services/movies-api';\nimport Message from 'components/Message/Message';\nimport AboutTheFilm from 'components/AboutTheFilm/AboutTheFilm';\nimport Informations from 'components/Informations/Informations';\n\nfunction MovieDetailsPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? \"/\")\n  \n  useEffect(() => {\n  async function loadMovieDetails() {\n      setIsLoading(true);\n      setError(null);\n        try {\n        const {\n          genres,\n          original_title,\n          overview,\n          poster_path,\n          release_date,\n          vote_average,\n        } = await getDetails(movieId);\n        const releaseYear = release_date.slice(0, 4);\n        const votePercentage = Math.round(vote_average * 10);\n\n        setMovie({\n          genres: genres.map(genre => genre.name).join(' '),\n          original_title,\n          overview,\n          poster_path,\n          releaseYear,\n          votePercentage,\n        });\n      \n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Try reloading the page!'); }\n        } finally {\n          setIsLoading(false);\n      }\n    }\n    loadMovieDetails();\n  }, [movieId]);\n  \n  return (\n    <>\n      <Link to={backLink.current}>\n        <button>\n          <TiArrowLeftThick />\n          Go back\n        </button>\n      </Link>\n      {isLoading ? <Message>\n        Loading\n      </Message> : <Informations movie={movie} />}\n      {error && <Message>{error}</Message>}\n      <AboutTheFilm/>\n    </>\n  );\n  \n}\n\nexport default MovieDetailsPage;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7b381c0941b126eabbbca88209330c37',\n  },\n});\n\nexport const getAllMovie = async () => {\n  const response = await instance.get(`trending/movie/day?`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getDetails = async id => {\n  const response = await instance.get(`/movie/${id}`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getSearchMovie = async ({ search, abortCtrl }) => {\n  const response = await instance.get(`/search/movie?query=${search}`, {\n    signal: abortCtrl.signal,\n  });\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await instance.get(`/movie/${id}/credits`);\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getRevMovie = async id => {\n  const response = await instance.get(`/movie/${id}/reviews`);\n  console.log(response.data);\n  return response.data;\n};  "],"names":["Section","styled","to","Suspense","fallback","Wrapper","movie","src","poster_path","imgMovie","alt","original_title","width","releaseYear","votePercentage","overview","genres","useState","isLoading","setIsLoading","error","setError","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getDetails","release_date","vote_average","slice","Math","round","map","genre","name","join","code","loadMovieDetails","current","Message","instance","axios","baseURL","params","api_key","getAllMovie","get","response","console","log","data","id","getSearchMovie","search","abortCtrl","signal","getMovieCast","getRevMovie"],"sourceRoot":""}