{"version":3,"file":"static/js/387.ffb6986f.chunk.js","mappings":"uSAEaA,EAAOC,EAAAA,GAAAA,EAAH,sCAGJC,EAAOD,EAAAA,GAAAA,GAAH,gD,SCyDjB,MAvDA,WACE,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAyBJ,EAAAA,EAAAA,UAAS,IAAlC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEP,GAAa,GACbE,EAAS,MAFX,mBAI2BM,EAAAA,EAAAA,IAAaH,GAJxC,gBAIYI,EAJZ,EAIYA,KACRL,EAAQK,GALZ,kDAOuB,iBAAf,KAAMC,MACRR,EAAS,2BARf,yBAWIF,GAAa,GAXjB,8EADc,uBAAC,WAAD,wBAedW,EACD,GAAE,CAACN,KAEF,gCACGN,GACC,SAACa,EAAA,EAAD,UAAS,aAET,8BACA,wBACGT,EAAMU,OAAS,EACdV,EAAMW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1BC,EAAWD,EAAY,wCACQA,GACjCE,EACJ,OACE,UAACvB,EAAD,YACE,gBAAKwB,IAAKF,EAAUG,IAAKN,EAAMO,MAAM,QACrC,SAAC5B,EAAD,WAAM,uBAAIqB,OACV,UAACrB,EAAD,YAAM,uBAAG,eAAc,IAAEsB,OAHhBF,EAMd,KAED,SAACH,EAAA,EAAD,UAAS,yCAMdX,IAAS,SAACW,EAAA,EAAD,UAAUX,MAGzB,C,mMC1DDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAKCC,EAAW,mCAAG,WAAMC,GAAN,kFACnBC,EADmB,mCACuBH,EADvB,4DAC8EE,GAD9E,SAEFH,EAAAA,EAAAA,IAAUI,GAFR,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,sDAKXC,EAAU,mCAAG,WAAMzB,GAAN,kFAClBuB,EADkB,gBACKvB,EADL,qBACyBoB,EADzB,4BAEMD,EAAAA,EAAAA,IAAUI,GAFhB,uBAEVG,EAFU,EAEhBF,KAFgB,kBAGjBE,GAHiB,2CAAH,sDAKVC,EAAc,mCAAG,WAAML,GAAN,kFACtBC,EADsB,+BACgBH,EADhB,4DACuEE,GADvE,SAEGH,EAAAA,EAAAA,IAAUI,GAFb,uBAEdK,EAFc,EAEpBJ,KAFoB,kBAGrBI,GAHqB,2CAAH,sDAMdzB,EAAY,mCAAG,WAAMH,GAAN,kFACpBuB,EADoB,gBACGvB,EADH,sDAEHmB,EAAAA,EAAAA,IAAUI,GAFP,uBAElBC,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAWZK,EAAW,mCAAG,WAAM7B,GAAN,kFACnBuB,EADmB,gBACIvB,EADJ,sDAEFmB,EAAAA,EAAAA,IAAUI,GAFR,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Desc = styled.p`\n  margin: 5;\n`;\nexport const Item = styled.li`\n  margin-bottom: 12px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../../services/movies-api';\nimport Message from 'components/Message/Message';\nimport imgMovie from 'components/img-movie/img-movie.png';\nimport { Desc, Item } from './Cast.styled';\n\nfunction Cast() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [casts, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadMovieCast() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Try reloading the page!');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadMovieCast();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading ? (\n        <Message>Loading</Message>\n      ) : (\n        <section>\n        <ul>\n          {casts.length > 0 ? (\n            casts.map(({ id, name, character, profile_path }) => {\n              const imageUrl = profile_path\n                ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                : imgMovie;\n              return (\n                <Item key={id}>\n                  <img src={imageUrl} alt={name} width=\"92\" />\n                  <Desc><b>{name}</b></Desc>\n                  <Desc><b>Character:</b> {character}</Desc>\n                </Item>\n              );\n            })\n          ) : (\n            <Message>Not information about the movie!</Message>\n          )}\n        </ul>\n        </section>\n      )}\n      \n      {error && <Message>{error}</Message>}\n    </>\n  );\n}\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '7b381c0941b126eabbbca88209330c37';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n// axios.defaults.headers.common['Authorization'] =\n//   '7b381c0941b126eabbbca88209330c37';\nexport const getAllMovie = async stringToSearch => {\n  const queryString = `trending/all/day?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\nexport const getDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\nexport const getSearchMovie = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n\n\n\n\n\nexport const getRevMovie = async movieId => {\n  const queryString = `movie/${movieId}/reviews$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n\n\n\n\n"],"names":["Desc","styled","Item","useState","isLoading","setIsLoading","error","setError","casts","setCast","movieId","useParams","useEffect","getMovieCast","cast","code","loadMovieCast","Message","length","map","id","name","character","profile_path","imageUrl","imgMovie","src","alt","width","axios","KEY","getAllMovie","stringToSearch","queryString","data","getDetails","movie","getSearchMovie","movies","getRevMovie"],"sourceRoot":""}