{"version":3,"file":"static/js/186.45ccf1ba.chunk.js","mappings":"wOAgDA,UA3CA,WACE,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACEP,GAAa,GACbE,EAAS,MAFX,mBAI8BM,EAAAA,EAAAA,IAAYH,GAJ1C,gBAIYI,EAJZ,EAIYA,QACRL,EAAWK,GALf,kDAOuB,iBAAf,KAAMC,MACRR,EAAS,kBARf,yBAWIF,GAAa,GAXjB,8EADc,uBAAC,WAAD,wBAedW,EACD,GAAE,CAACN,KAGF,+BACGN,GACC,SAAC,IAAD,UAAS,aACT,wBACGI,EAAQS,OAAS,EAChBT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,0BAAG,uBAAG,YAAW,IAAED,MACnB,uBAAIC,MAFGF,EADC,KAMR,SAAC,IAAD,UAAS,iCAGlBb,IAAS,SAAC,IAAD,UAAUA,MAGzB,C,mMC5CDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCAIzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,sNAOK,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAU,qBADR,cACnBE,EADmB,OAEzBC,QAAQC,IAAIF,EAASG,MAFI,kBAGlBH,EAASG,MAHS,2CAAH,qDAUXC,EAAU,mCAAG,WAAMT,GAAN,uFACDG,EAAAA,EAAAA,IAAA,gBAAmBH,IADlB,cAClBK,EADkB,OAExBC,QAAQC,IAAIF,EAASG,MAFG,kBAGjBH,EAASG,MAHQ,2CAAH,sDAUVE,EAAc,mCAAG,gGAASC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,UAAjB,SACLT,EAAAA,EAAAA,IAAA,6BAAgCQ,GAAU,CAC/DE,OAAQD,EAAUC,SAFQ,cACtBR,EADsB,OAI5BC,QAAQC,IAAIF,EAASG,MAJO,kBAKrBH,EAASG,MALY,2CAAH,sDAYdM,EAAY,mCAAG,WAAMd,GAAN,uFACHG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADG,cACpBK,EADoB,OAE1BC,QAAQC,IAAIF,EAASG,MAFK,kBAGnBH,EAASG,MAHU,2CAAH,sDAUZd,EAAW,mCAAG,WAAMM,GAAN,uFACFG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADE,cACnBK,EADmB,OAEzBC,QAAQC,IAAIF,EAASG,MAFI,kBAGlBH,EAASG,MAHS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRevMovie } from '../../services/movies-api';\nimport Message from 'components/Message/Message';\n\nfunction Reviews() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function getReviews() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const { results } = await getRevMovie(movieId);\n        setReviews(results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError('Try reloading!');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Message>Loading</Message>) : (\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p><b>Author:</b> {author}</p>\n                <p>{content}</p>\n              </li>\n            ))\n          ) : ( <Message>We don't have any reviews!</Message>)}\n        </ul>\n      )}\n      {error && <Message>{error}</Message>}\n    </section>\n  );\n}\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const KEY = '7b381c0941b126eabbbca88209330c37';\n// export const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.headers.common['Authorization'] =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YjM4MWMwOTQxYjEyNmVhYmJiY2E4ODIwOTMzMGMzNyIsInN1YiI6IjY0YzE4YzcyMTNhMzIwMDExYzVmNWQ2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.w5Zdux52JzMaXxGEE-7rWODXXVwXs963VxqsHLpWRto';\n\n// export const getAllMovie = async stringToSearch => {\n//   const queryString = `trending/all/day?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n//   const { data } = await axios.get(queryString);\n//   return data;\n// };\nexport const getAllMovie = async () => {\n  const response = await axios.get('trending/all/day?');\n  console.log(response.data);\n  return response.data;\n};\n// export const getDetails = async movieId => {\n//   const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n//   const { data: movie } = await axios.get(queryString);\n//   return movie;\n// };\nexport const getDetails = async id => {\n  const response = await axios.get(`movie/${id}`);\n  console.log(response.data);\n  return response.data;\n};\n// export const getSearchMovie = async stringToSearch => {\n//   const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n//   const { data: movies } = await axios.get(queryString);\n//   return movies;\n// };\nexport const getSearchMovie = async ({ search, abortCtrl }) => {\n  const response = await axios.get(`search/movie?query=${search}`, {\n    signal: abortCtrl.signal,\n  });\n  console.log(response.data);\n  return response.data;\n};\n// export const getMovieCast = async movieId => {\n//   const queryString = `movie/${movieId}/credits$?api_key={apiKey}&language=en-US`;\n//   const { data } = await axios.get(queryString);\n//   return data;\n// };\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n  console.log(response.data);\n  return response.data;\n};\n// export const getRevMovie = async movieId => {\n//   const queryString = `movie/${movieId}/reviews$?api_key={apiKey}&language=en-US`;\n//   const { data } = await axios.get(queryString);\n//   return data;\n// };\nexport const getRevMovie = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n  console.log(response.data);\n  return response.data;\n};"],"names":["useState","isLoading","setIsLoading","error","setError","reviews","setReviews","movieId","useParams","useEffect","getRevMovie","results","code","getReviews","length","map","id","author","content","axios","getAllMovie","response","console","log","data","getDetails","getSearchMovie","search","abortCtrl","signal","getMovieCast"],"sourceRoot":""}